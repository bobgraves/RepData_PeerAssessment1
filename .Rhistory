summary(data)
?rbind
p1<-data[,p]
summary(p0)
summary(p1)
mean(p0,p1)
px<-rbind(p0,p1)
px
px<-cbind(p0,p1)
dim(p0)
p0
p1
c(p0,p1)
px<- c(p0,p1)
sumamry(px)
summary(px)
py<-c()
py
source("pollutantmean.R")
pollutantmean("specdata","nitrate",4:5)
pollutantmean("specdata","nitrate",1:10)
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","sulfate",1:10)
data
complete.cases(data)
completes<-complete.cases(data)
sum(completes)
summary(data)
nobs[1,] <- c(3,4)
nobs <- data.frame(col.names=c("id","nobs"))
nobs
nobs[1,] <- c(3,4)
rbind(nobs,c(3,4))
cbind(nobs,c(3,4))
nobs<-cbind(nobs,c(3,4))
nobs
nobs<-cbind(nobs,c(1,3))
nobs
nobs <- data.frame(col.names=c("id","nobs"))
nobs[1,"nobs"]<-4
nobs
rbind(nobs,c(1,100))
nobs[4,"id"]<-4
nobs[5,"id"]<-5
nobs
nobs[5,"nobs"]<-345
nobs
nobs <- data.frame(col.names=c("id","nobs"))
nos
nobs
cbind(nobs,c(1,2))
cbind(nobs,c(2,3))
nobs<-cbind(nobs,c(1,2))
nobs<-cbind(nobs,c(2,3))
nobs
source("complete.R")
source("complete.R")
complete("specdata",3)
complete("specdata",30:25)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
id<-c(3,4,5)
id
nobs<-c(300,400,500)
c<-data.frame(id,nobs)
c
n<-4
x<-c()
x<-c(x,n)
x
x<-c(x,n)
x
source("complete.R")
complete("specdata",3)
source("complete.R")
complete("specdata",3)
submit()
submit()
submit()
?cor
complete("specdata",1:10)
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
summary(data)
source("corr.R")
corr("specdata")
completes <- complete(directory,1:10)
completes[,nobs>1200]
completes <- complete(directory,1:10)
completes <- complete("specdata",1:10)
completes[,nobs>1200]
completes[,"nobs">1200]
completes[,[nobs>1200]
completes[,[nobs>1200]]
completes[[nobs>1200]]
completes[[,nobs>1200]]
completes[,completes$nobs>1200]
completes
completes[,completes$nobs>100]
completes[completes$nobs>100]
completes[,completes$nobs>100]
subset(completes,nobs>100)
subset(completes,nobs>1000)
source("corr.R")
corr("specdata",1200)
corr("specdata",10)
corr("specdata",100)
corr("specdata",1000)
data
cor(data$nitrate,data$sulfate)
cor(data$nitrate,data$sulfate,use="complete.obs")
source("corr.R")
source("corr.R")
corr("specdata",150)
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr<-corr("specdata",400)
head(cr)
cr<-corr("specdata",5000)
head(cr)
summary(cr)
cr<-corr("specdata")
length(cr)
summary(cr)
submit()
submit()
submit()
library(nlme)
library (lattice)
xyplot (weight ~ Time | Diet, BodyWeight)
?text
points()
?points
xyplot (weight ~ Time | Diet, BodyWeight)
text(1,400,"bob")
?axis
?panel.lmline()
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data=airquality)
print(p)
xyplot (weight ~ Time | Diet, BodyWeight)
text(x=1,y=200,labels = "bob")
plot.new()
xyplot (weight ~ Time | Diet, BodyWeight)
text(x=1,y=200,labels = "bob")
text(x=1,y=1,labels = "bob")
text(x=.1,y=.1,labels = "bob")
panel.lmline(x=1,y=100,identifier = "bob")
?panel.lmline
airquality = transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=. ~Month)
?qplot
install.packages("ggplot2")
library("ggplot2")
qplot(Wind,Ozone,data=airquality,facets=. ~Month)
qplot(Wind,Ozone,data=airquality)
qplot(votes,rating,data=movies)
dataset(movies)
data(movies)
qplot(votes,rating,data=movies)
qplot(votes,rating,data=movies) + geom_smooth()
qplot(votes,rating,data=movies) + stats_smooth("loess")
qplot(votes,rating,data=movies,smooth="loess"
)
qplot(votes,rating,data=movies,panel=panel.loess)
setwd("~/GitHub/")
setwd("RepData_PeerAssessment1/")
list.files()
activity<-read.csv("activty.csv")
activity<-read.csv("activity.csv")
summary(activity)
dim(activty)
dim(activity)
head(activity,10)
head(activity,60)
tail(activity,20)
hist(activity)
hist(activity$steps)
hist(activity$steps,activity$date)
hist(activity$date,activity$steps)
factor(activity$date)
activity$date <- as.Date(activty$date,"%Y-%m-%d")
activity$date <- as.Date(activity$date,"%Y-%m-%d")
head (activity)
hist(activty$date,activity$steps)
hist(activity$date,activity$steps)
plot(activity$interval,activity$steps)
hist(activity$date)
hist(activity$date,breaks=)
hist(activity$date,breaks=10)
barplot(activity$steps)
rowsum(activity$steps)
rowsum(activity$steps,format(Date,"%Y-%m-%d"))
rowsum(activity$steps,format(activity$date,"%Y-%m-%d"))
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")))
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),breaks=10)
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),breaks=20)
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),breaks=15)
mean(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")))
mean(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),na.rm = T)
median(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),na.rm = T)
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),breaks=100)
plot(activity$interval,activity$steps)
by(data = activity$steps,activity$interval,mean)
complete.cases(activity)
c <- complete.cases(activity)
c
data <- activity[,c]
data <- activity[c,]
data
plot(data$interval,data$steps)
by(data = data$steps,data$interval,mean)
stepsByInterval<-by(data = data$steps,data$interval,mean)
summary(stepsByInterval)
plot(stepsByInterval)
summary(data)
max(stepsByInterval)
subset(stepsByInterval,max(stepsByInterval))
head(stepsByInterval)
stepsByInterval
subset(stepsByInterval,stepsByInterval==max(stepsByInterval))
plot(stepsByInterval[1],stepsByInterval[1])
dim(stepsByInterval)
stepsByInterval<-by(data = data$steps,data$interval,mean)
aggregate(data,by=list(interval),FUN=mean,na.rm=TRUE)
head(data)
aggregate(data,by=list("interval"),FUN=mean,na.rm=TRUE)
aggregate(data[],c(1,3)]),by=list("interval"),FUN=mean,na.rm=TRUE)
aggregate(data[,c(1,3)]),by=list("interval"),FUN=mean,na.rm=TRUE)
data
aggregate(data[,c(1,3)]),by=list("interval"),FUN=mean,na.rm=TRUE)
subset(data,select=c('interval','steps'))
subset(data,select=c('interval','steps'))
stepsData <-subset(data,select=c('interval','steps'))
aggregate(stepsData,by=list('interval'),FUN=mean)
by(stepsData,FUN = mean)
by(stepsData,stepsData$interval, FUN = mean)
aggregate(steps ~ interval, data=stepsData, FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=stepsData, FUN=mean)
plot (avgStepsPerInterval)
which.max(avgStepsPerInterval)
which.max(avgStepsPerInterval[,steps])
which.max(avgStepsPerInterval[,'steps'])
avgStepsPerInterval[which.max(avgStepsPerInterval[,'steps']),]
?count
count(data)
is.na.data.frame(data)
is.na.data.frame(data[,steps])
is.na.data.frame(data[,'steps'])
is.na(data[,'steps'])
sum(is.na(data[,'steps']))
sum(is.na(activity[,'steps']))
dim(data)
dim(activity)-dim(data)
avgStepsPerInterval['interval'=805]
avgStepsPerInterval['interval'=805,]
avgStepsPerInterval['interval'=805]
avgStepsPerInterval['interval'=805]
avgStepsPerInterval
head(avgStepsPerInterval)
avgStepsPerInterval[interval==805]
avgStepsPerInterval[interval==805,]
class(avgStepsPerInterval)
avgStepsPerInterval[,interval==805]
avgStepsPerInterval[[interval==805]
]
avgStepsPerInterval[['interval'==805]]
avgStepsPerInterval[['interval'==805],]
avgStepsPerInterval[['interval'==800]]
avgStepsPerInterval[,['interval'==800]]
avgStepsPerInterval[avgStepsPerInterval$interval==800,]
avgStepsPerInterval[avgStepsPerInterval$interval==800,steps]
avgStepsPerInterval[avgStepsPerInterval$interval==800,'steps']
head(data,30)
head(activity,30)
is.na(activity$steps)
naSteps<-is.na(activity$steps)
sum(naSteps)
activity[naSteps,'interval']
dim(naSteps)
sumamry(naSteps)
summary(naSteps)
head(activity)
newSteps<-data[,'steps']
newSteps
newSteps<-activity[,'steps']
head(newSteps)
newSteps(1)<-avgStepsPerInterval['interval'==805,steps]
avgStepsPerInterval[avgStepsPerInterval$interval==800,'steps']
newSteps[1]<-avgStepsPerInterval[avgStepsPerInterval$interval==800,'steps']
head(newSteps)
?assign
for(i in 10) {
print(i,activity[i,'steps'])
}
print(activity[i,'steps'])
for(i in 10) {
print(activity[i,'steps'])
}
for(i in 10) {
print(activity[i,'steps'])
}
source('~/GitHub/RepData_PeerAssessment1/week2.R', echo=TRUE)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
avgStepsPerInterval[avgStepsPerInterval$interval==800,'steps']
activity[1,'interval']
activity[2,'interval']
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
head(activity)
head(avgStepsPerInterval)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
head(activity)
activity<-read.csv("activty.csv")
activity<-read.csv("activity.csv")
head(activity)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
head(activity)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
rowsum(activity$steps,format(activity$date,"%Y-%m-%d"))
rowsum(activity$steps,format(Date,"%Y-%m-%d"))
rowsum(activity$steps,format(activity$date,"%Y-%m-%d"))
rowsum(activity$steps,format(activity$date,"%Y-%m-%d"))
hist(rowsum(activity$steps,format(activity$date,"%Y-%m-%d")),breaks=10)
rowsum(activity$steps)
is.na.data.frame(data)
is.na.data.frame(data[,'steps'])
is.na(data[,'steps'])
c <- complete.cases(activity)
data <- activity[c,]
data
plot(data$interval,data$steps)
summary(rawActivity)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
summary(cleanActivity)
rowsum(cleanActivity$steps,format(cleanActivity$date,"%Y-%m-%d"))
cleanStepsPerDay<-rowsum(cleanActivity$steps,format(cleanActivity$date,"%Y-%m-%d"))
summary(cleanStepsPerDay)
plot(cleanStepsPerDay)
plot(cleanStepsPerDay[1],cleanStepsPerDay[2])
class(cleanStepsPerDay)
hist(cleanStepsPerDay)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
head(cleanStepsPerDay)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
plot(activity$interval,activity$steps)
subset(stepsByInterval,stepsByInterval==max(stepsByInterval))
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
stepsByInterval<-by(data = data$steps,data$interval,mean)
stepsByInterval
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
head(avgStepsByInterval)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
avgStepsPerInterval<-aggregate(steps ~ interval, data=stepsData, FUN=mean)
head(avgStepsPerInterval)
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
sum(is.na(activity[,'steps']))
sum(is.na(rawActivity[,'steps']))
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
?dim
source('~/GitHub/RepData_PeerAssessment1/week2.R')
?nrow
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
?weekdays
t<-imputedActivity(1:100,)
t<-imputedActivity[(]1:100,]
t<-imputedActivity[1:100,]
t
?factor
factor(t)
factor(weekdays(t$date))
?weekdays
?weekdays("1/20/2014")
weekdays("1/20/2014")
factor(weekdays(imputedActivity$date))
week<-c("Monday","Tuesday","Wednesday")
factor(week)
factor(weekdays(imputedActivity$date))
weekdays(imputedActivity$date) %in% week
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
?factor
factor(isWeekend,c(FALSE,TRUE),labels=c("weekday","weekend"))
imputedActivity$weekday<-factor(isWeekend,c(FALSE,TRUE),labels=c("weekday","weekend"))
head(imputedActivity)
imputedActivity[200:300,]
imputedActivity[200:3000,]
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity['weekday'=weekday,], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[['weekday'=weekday,], FUN=mean)
imputedActivity[[weekday=weekday],]
imputedActivity[[weekday=weekday]]
imputedActivity[['weekday'=weekday]]
subset(imputedActivity,subset = weekday==weekday)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[['weekday'==weekday,], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[['weekday'==weekday,]], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[['weekday'==weekday],], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[['weekday'==weekday]], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity['weekday'==weekday], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity['weekday'==weekday,], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[imputedActivity$weekday==weekday,], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[imputedActivity$weekday=='weekday'], FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval, data=imputedActivity[imputedActivity$weekday==1], FUN=mean)
levels(imputedActivity$weekday)
levels(imputedActivity$weekday)
factors<-factor(isWeekend,c(FALSE,TRUE),labels=c("weekday","weekend"))
levels(factors)
levels(factors)[1]
imputedActivity['weekday'==levels(factors)[1]]
imputedActivity['weekday'=="weekday"]
imputedActivity['weekday'=="weekday",]
imputedActivity['weekday' %in% c("weeekend")]
imputedActivity['weekday' %in% c("weeekday")]
imputedActivity[imputedActivity$weekday %in% c("weeekday")]
imputedActivity$weekday == "weekday"
library(lattice)
xyplot(steps ~ interval | weekday,data=imputedActivity,layout=c(1,2))
xyplot(steps ~ interval | weekday,data=imputedActivity,layout=c(1,2),type="l")
source('~/GitHub/RepData_PeerAssessment1/week2.R')
xyplot(steps ~ interval | weekday,data=imputedActivity,layout=c(1,2),type="l")
source('~/GitHub/RepData_PeerAssessment1/week2.R')
xyplot(steps ~ interval | weekday,data=imputedActivity,layout=c(1,2),type="l")
imputedActivity[imputed$weekday=='weekday']
imputedActivity[imputed$weekday=='weekday',]
imputedActivity[imputedActivity$weekday=='weekday',]
imputedActivity[imputedActivity$weekday=='weekday']
imputedActivity[weekday=='weekday']
avgStepsPerInterval<-aggregate(steps ~ interval | weekday, data=imputedActivity, FUN=mean)
avgStepsPerInterval<-aggregate(steps ~ interval , data=imputedActivity, FUN=mean)
avgStepsPerInterval
avgStepsPerInterval<-aggregate(steps ~ interval+weekday , data=imputedActivity, FUN=mean)
avgStepsPerInterval
xyplot(steps ~ interval | weekday, data=avgStepsPerInterval, layout=c(1,2),type='l')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
dev()
source('~/GitHub/RepData_PeerAssessment1/week2.R')
source('~/GitHub/RepData_PeerAssessment1/week2.R')
class(avgStepsPerInterval)
